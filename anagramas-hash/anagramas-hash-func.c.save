#include <stdio.h>
#include <string.h>
#include <ctype.h>

struct list *list_create(void)
// crea una lista vacía, retorna puntero a la misma
{
	return struct list *new_list = (struct list*) malloc(sizeof(struct list));
}

struct list *list_insert_last_word(struct list *l, char *word)
// inserta una palabra al final de la lista l, retorna el puntero a la lista
// si la lista es NULL, crea una nueva
{
	if(l == NULL){
		l = list_create()
	}
	struct listnode *newnode = (struct listnode*) malloc(sizeof(listnode));
	newnode -> word
	
}

struct hashnode *hash_insert_word(struct hashnode *node, char *key, char *word)
// busca key en el hash (y si no encuentra inserta key al inicio en lista simple)
// luego agrega palabra al final de la lista de anagramas asociadas a la key
// retorna siempre el primero de la lista: node si key estaba o el nuevo nodo si se insertó
{

}

unsigned int hash(char *str)
    // genera un número único (grande) asociado al string

{

}

char *sort_word(char *word)
// ordena EN EL LUGAR la palabra 'word' según código ASCII en forma ascendente
{

}

void print_anagrams(struct hashnode *hn);
// escribe (printf) la lista de anagramas para ese hashnode
{

}
